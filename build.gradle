buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0-rc03'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    jcenter()
    maven {
        url "https://repository-achartengine.forge.cloudbees.com/snapshot/"
    }
}

dependencies {
    implementation "com.android.support:design:28.0.0"
    implementation "org.achartengine:achartengine:1.2.0"
    implementation "ch.acra:acra:4.6.1"
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
//    compile 'com.google.android.gms:play-services:12.0.1'
    implementation 'org.apache.commons:commons-lang3:3.8.1'

    implementation ('com.google.api-client:google-api-client:1.19.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'xpp3'
        exclude group: 'junit'
        exclude group: 'com.google.android'
    }
    implementation 'com.google.api-client:google-api-client-android:1.19.0'
    implementation 'com.google.api-client:google-api-client-gson:1.19.0'
    implementation 'com.google.apis:google-api-services-adsense:v1.4-rev29-1.19.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'net.sf.opencsv:opencsv:2.3'
    implementation 'com.google.code.findbugs:jsr305:1.3.9'
}

android {

    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        versionCode 284
        versionName "2.8.0-BETA1"

        minSdkVersion 21
        targetSdkVersion 28
    }

    // lintOptions {
    //     checkReleaseBuilds false
    //     abortOnError false
    // }

    flavorDimensions "default"
    productFlavors {
        free {}
    }


    signingConfigs {
        if (rootProject.file('andlytics-release-key.keystore').exists()) {
            release {
                storeFile file ("andlytics-release-key.keystore")
            }
        }
    }

    buildTypes {
        release {
            if (rootProject.file('andlytics-release-key.keystore').exists()) {
                signingConfig signingConfigs.release
            }
        }
        releaseUnsigned.initWith(buildTypes.release)
        releaseUnsigned {
            signingConfig null
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

// get signing config from gradle.properties file if it exists
// See Andlytics Dropbox folder for example
if (project.hasProperty('storePassword')
        && project.hasProperty('keyAlias')
        && project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
}
